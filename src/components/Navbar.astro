---
import ResponsiveToggle from "../components/ResponsiveToggle.astro";
import { DarkMode } from "accessible-astro-components";
import { Image } from "astro:assets";
import logo from "../assets/Logo.png";
---

<div id="main-navigation" class="is-desktop">
  <div class="container">
    <a href="/" class="flex items-center no-underline">
      <Image src={logo} alt="IP Moviles" width="100" height="30" />
      <!-- <span class="font-bold">Accessible Astro</span> -->
    </a>
    <div class="wrapper">
      <nav class="desktop-menu" aria-label="Main navigation desktop">
        <ul class="menu">
          <!-- Slot for the desktop menu -->
          <slot />
        </ul>
      </nav>
      <DarkMode />
      <ResponsiveToggle />
    </div>
    <nav class="mobile-menu dropdown-menu" aria-label="Main navigation mobile">
      <ul class="menu">
        <slot />
      </ul>
    </nav>
  </div>
</div>

<script>
  const mainNav = document.querySelector("#main-navigation");
  const mainMenu = mainNav?.querySelector("ul");
  const dropdownMenu = mainNav?.querySelector(".dropdown-menu");

  const setActiveMenuItem = () => {
    const mobileDesktopMenus = mainNav?.querySelectorAll("nav > ul");
    const currentPathname = window.location.pathname;

    mobileDesktopMenus?.forEach((menu) => {
      const menuItems = [
        ...menu.querySelectorAll('a:not([rel*="external"])'),
      ] as HTMLAnchorElement[];
      menuItems.forEach((menuItem) => {
        if (
          currentPathname.includes(menuItem.pathname.replaceAll("/", "")) &&
          menuItem.textContent !== "Home"
        ) {
          menuItem.classList.add("is-active");
          menuItem.setAttribute("aria-current", "page");
        } else if (menuItem.textContent === "Home" && currentPathname === "/") {
          menuItem.classList.add("is-active");
          menuItem.setAttribute("aria-current", "page");
        }
      });
    });
  };

  const checkMenuSize = () => {
    const mainNavWidth = mainNav?.getBoundingClientRect().width || 0;
    const desktopMenuWidth =
      document.querySelector(".desktop-menu")?.getBoundingClientRect().width ||
      0;
    console.log("Desktop Menu Width:", desktopMenuWidth);
    const logoWidthBuffer = 300;
    const totalMenuWidth = Math.round(desktopMenuWidth) + logoWidthBuffer;

    if (totalMenuWidth >= mainNavWidth) {
      mainNav?.classList.remove("is-desktop");
      mainNav?.classList.add("is-mobile");
    } else if (totalMenuWidth <= mainNavWidth) {
      mainNav?.classList.add("is-desktop");
      mainNav?.classList.remove("is-mobile");
    }
  };

  const isOutOfViewport = (element: HTMLElement) => {
    const elementBounds = element.getBoundingClientRect();
    return (
      elementBounds.right >
      (window.innerWidth || document.documentElement.clientWidth)
    );
  };

  const openDropDownMenu = (dropDownMenu: HTMLElement) => {
    const dropdownList = dropDownMenu.parentNode?.querySelector(
      "ul"
    ) as HTMLElement;

    dropDownMenu.classList.add("show");
    dropDownMenu.setAttribute("aria-expanded", "true");

    if (isOutOfViewport(dropdownList)) {
      dropdownList.style.left = "auto";
    }
  };

  const closeDropDownMenu = (dropDownMenu: HTMLElement) => {
    dropDownMenu.classList.remove("show");
    dropDownMenu.setAttribute("aria-expanded", "false");
  };

  const toggleDropDownMenu = (event: MouseEvent) => {
    const target = event.target as HTMLElement;
    if (target.getAttribute("aria-expanded") === "true") {
      closeDropDownMenu(target);
    } else {
      openDropDownMenu(target);
    }
  };

  dropdownMenu &&
    dropdownMenu.addEventListener("click", () => {
      toggleDropDownMenu;
    });
  setActiveMenuItem();
  checkMenuSize();

  window.addEventListener("resize", checkMenuSize);
</script>

<style>
  #main-navigation {
    > .container {
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
    }

    &.is-desktop {
      .desktop-menu {
        visibility: visible;
        position: static;
      }

      .mobile-menu {
        display: none;
      }

      .darkmode-toggle {
        margin-top: -6px;
      }
    }

    &.is-mobile {
      flex-direction: column;

      .mobile-menu {
        display: none;

        &.show {
          display: block;
        }
      }

      .desktop-menu {
        visibility: hidden;
        z-index: -99;
        position: absolute;
        left: 0;
      }

      .responsive-toggle {
        display: block;
      }
    }

    .wrapper {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    nav {
      > ul {
        display: flex;
        gap: 1.5rem;
        list-style-type: none;

        a,
        button {
          text-decoration: none;
          font-size: 1.2rem;
          line-height: 1.6rem;
          transition: color 0.15s ease-in-out;
        }

        /* has-dropdown is not used */
        a:hover,
        a:focus,
        .is-active,
        has-dropdown > button:hover,
        .has-dropdown > button:focus {
          text-decoration: underline;
          text-decoration-thickness: 1px;
        }

        .is-active {
          font-weight: bold;
        }
      }
    }

    .mobile-menu {
      flex-basis: 100%;
      padding: 20px;

      > ul {
        flex-direction: column;

        ul {
          position: relative;
          margin-top: 10px;
        }
      }

      a,
      button {
        display: block;
        width: 100%;
        padding: 5px 0;
      }
    }
  }

  .darkmode-toggle {
    padding: 0;
    border: none;

    svg {
      width: 30px;
      margin-top: 4px;
    }

    svg path {
      fill: var(--theme-color);
      transition: fill 0.2s ease-in-out;
    }

    &:hover {
      svg path {
        fill: var(--theme-color-state);
      }
    }
  }
</style>
